<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" implements="utils.interfaces.ISceneContent"
		 xmlns:s="library://ns.adobe.com/flex/spark" width="100%" height="100%" creationComplete="onInit(event)"
		 xmlns:mx="library://ns.adobe.com/flex/mx" left="20" right="20" top="20" bottom="20" xmlns:iconswf="application.components.iconswf.*" xmlns:catalog="application.gamecontainer.scene.catalog.*" xmlns:iteminfo="application.gamecontainer.scene.catalog.iteminfo.*" xmlns:bar="application.gamecontainer.scene.catalog.bar.*" xmlns:separator="application.components.separator.*">
	<fx:Script>
		<![CDATA[
			import application.GameApplication;
			import application.gamecontainer.scene.catalog.article.catalog.CatalogArticleEvent;
			import application.gamecontainer.scene.catalog.bar.tab.CatalogTab;
			import application.gamecontainer.scene.catalog.bar.tab.CatalogTabEvent;
			
			import flashx.textLayout.formats.Category;
			
			import mx.events.FlexEvent;
			
			import utils.interfaces.ISceneContent;
			import utils.shop.category.CatalogBarCategory;
			import utils.shop.category.ShopCategory;	
			
			private var itemprototypes:Array;

			protected function onInit(event:FlexEvent):void
			{
				var categories:Array = new Array();
				var category1:CatalogBarCategory = new CatalogBarCategory(ShopCategory.THINGS, "Вещи");
				categories.push(category1);
				var category2:CatalogBarCategory = new CatalogBarCategory(ShopCategory.ARSENAL, "Оружие");
				categories.push(category2);
				var category3:CatalogBarCategory = new CatalogBarCategory(ShopCategory.BULLETS, "Патроны");
				categories.push(category3);
				catalogbar.addCategories(categories);
					
				catalogbar.addEventListener(CatalogTabEvent.SELECTED, onSelectCategory);
				catalogbar.addEventListener(CatalogTabEvent.UNSELECTED, onUnSelectCategory);
				
				catalogbody.addEventListener(CatalogArticleEvent.SELECTED, onCatalogArticleSelected, false, 0, true);
				
				(catalogbar.hash[ShopCategory.THINGS] as CatalogTab).selected = true;
				
				GameApplication.app.shopmanager.getItemPrototypes(onGetItemPrototypes);
			}
			
			private function onCatalogArticleSelected(e:CatalogArticleEvent):void{
				selecteditemInfo.changeInfo(e.article.prototype);
			}
			
			private function onUnSelectCategory(e:CatalogTabEvent):void{				
				catalogbody.removeItems();
			}
			
			private function onSelectCategory(e:CatalogTabEvent):void{
				fillCatalogBody();
			}
			
			private function onGetItemPrototypes(itemprototypes:Array):void {
				this.itemprototypes = itemprototypes;
				fillCatalogBody();
			}
			
			private function fillCatalogBody():void {				
				var categoryId:int;
				if (catalogbar && catalogbar.selectedTab) categoryId = catalogbar.selectedTab.category.id;
				itemprototypes && catalogbody.addItems(itemprototypes, categoryId);
			}
			
			public function onHide():void {	
				itemprototypes = null;
			}		

		]]>
	</fx:Script>
	<s:Rect width="100%" height="100%" radiusX="0" radiusY="0">
		<s:stroke>
			<mx:SolidColorStroke color="0x583016"/>
		</s:stroke>
		<s:fill>
			<s:SolidColor color="0x8D4F25"/>
		</s:fill>
	</s:Rect>
	<s:VGroup width="100%" height="100%">
		<mx:Spacer height="10"/>
		<s:Label width="100%" textAlign="center" text="Магазин" fontSize="30" color="0xFFFFCC" fontWeight="bold" fontStyle="italic"/>
		<s:HGroup width="100%" height="100%" gap="10">
			<iteminfo:ItemInfo id="selecteditemInfo"/>
			<separator:SeparatorMXML width="1" height="100%" top="10" bottom="10"/>
			<s:VGroup gap="10" width="100%" height="100%">
				<bar:CatalogBar id="catalogbar" height="25" gap="0" width="450"/>
				<catalog:CatalogBody id="catalogbody" width="460"/>
			</s:VGroup>
		</s:HGroup>
		<mx:Spacer height="10"/>
	</s:VGroup>
</s:Group>